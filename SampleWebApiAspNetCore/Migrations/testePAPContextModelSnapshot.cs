// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SampleWebApiAspNetCore.Models;

namespace SampleWebApiAspNetCore.Migrations
{
    [DbContext(typeof(testePAPContext))]
    partial class testePAPContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.3")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("SampleWebApiAspNetCore.Models.Funcao", b =>
                {
                    b.Property<int>("IdFuncao")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("IdFuncao");

                    b.ToTable("Funcao");
                });

            modelBuilder.Entity("SampleWebApiAspNetCore.Models.Funcionario", b =>
                {
                    b.Property<int>("IdFuncionario")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Cc")
                        .IsRequired()
                        .HasMaxLength(9)
                        .HasColumnType("nvarchar(9)")
                        .HasColumnName("CC");

                    b.Property<DateTime>("DataNasc")
                        .HasColumnType("date");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("Funcao")
                        .HasColumnType("int");

                    b.Property<int?>("IdUtilizador")
                        .HasColumnType("int");

                    b.Property<string>("Nacionalidade")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Nif")
                        .IsRequired()
                        .HasMaxLength(9)
                        .HasColumnType("nvarchar(9)")
                        .HasColumnName("NIF");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Sexo")
                        .IsRequired()
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("char(10)")
                        .IsFixedLength(true);

                    b.Property<string>("Telemovel")
                        .IsRequired()
                        .HasMaxLength(9)
                        .HasColumnType("nvarchar(9)");

                    b.HasKey("IdFuncionario");

                    b.HasIndex("Funcao");

                    b.HasIndex("IdUtilizador")
                        .IsUnique()
                        .HasFilter("[IdUtilizador] IS NOT NULL");

                    b.ToTable("Funcionario");
                });

            modelBuilder.Entity("SampleWebApiAspNetCore.Models.Marcacao", b =>
                {
                    b.Property<int>("IdMarcacao")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("Data")
                        .HasColumnType("date");

                    b.Property<TimeSpan>("Hora")
                        .HasColumnType("time");

                    b.Property<int?>("IdFuncionario")
                        .HasColumnType("int");

                    b.Property<int>("IdPaciente")
                        .HasColumnType("int");

                    b.Property<int>("IdTecnico")
                        .HasColumnType("int");

                    b.Property<string>("Qrcode")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("QRCODE");

                    b.Property<string>("Relatorio")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("TecnicoNavigationIdFuncionario")
                        .HasColumnType("int");

                    b.Property<string>("Tipo")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("UltimaAtualizacao")
                        .HasColumnType("datetime")
                        .HasColumnName("Ultima_atualizacao");

                    b.HasKey("IdMarcacao");

                    b.HasIndex("IdFuncionario");

                    b.HasIndex("IdPaciente");

                    b.HasIndex("TecnicoNavigationIdFuncionario");

                    b.ToTable("Marcacao");
                });

            modelBuilder.Entity("SampleWebApiAspNetCore.Models.Paciente", b =>
                {
                    b.Property<int>("IdPaciente")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Cc")
                        .IsRequired()
                        .HasMaxLength(9)
                        .HasColumnType("nvarchar(9)")
                        .HasColumnName("CC");

                    b.Property<DateTime>("DataNasc")
                        .HasColumnType("date");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("IdUtilizador")
                        .HasColumnType("int");

                    b.Property<string>("Nacionalidade")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Nif")
                        .IsRequired()
                        .HasMaxLength(9)
                        .HasColumnType("nvarchar(9)")
                        .HasColumnName("NIF");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Sexo")
                        .IsRequired()
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("char(10)")
                        .IsFixedLength(true);

                    b.Property<string>("Telemovel")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("IdPaciente");

                    b.HasIndex("IdUtilizador")
                        .IsUnique()
                        .HasFilter("[IdUtilizador] IS NOT NULL");

                    b.ToTable("Paciente");
                });

            modelBuilder.Entity("SampleWebApiAspNetCore.Models.Utilizador", b =>
                {
                    b.Property<int>("IdUtilizador")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Login")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Senha")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("IdUtilizador");

                    b.ToTable("Utilizador");
                });

            modelBuilder.Entity("SampleWebApiAspNetCore.Models.Funcionario", b =>
                {
                    b.HasOne("SampleWebApiAspNetCore.Models.Funcao", "FuncaoNavigation")
                        .WithMany("Funcionarios")
                        .HasForeignKey("Funcao")
                        .HasConstraintName("FK_Funcionario_Funcao")
                        .IsRequired();

                    b.HasOne("SampleWebApiAspNetCore.Models.Utilizador", "UtilizadorNavigation")
                        .WithOne("Funcionario")
                        .HasForeignKey("SampleWebApiAspNetCore.Models.Funcionario", "IdUtilizador")
                        .HasConstraintName("FK_Funcionario_Utilizador");

                    b.Navigation("FuncaoNavigation");

                    b.Navigation("UtilizadorNavigation");
                });

            modelBuilder.Entity("SampleWebApiAspNetCore.Models.Marcacao", b =>
                {
                    b.HasOne("SampleWebApiAspNetCore.Models.Funcionario", "FuncionarioNavigation")
                        .WithMany("Marcacao")
                        .HasForeignKey("IdFuncionario")
                        .HasConstraintName("FK_Marcacao_Funcionario");

                    b.HasOne("SampleWebApiAspNetCore.Models.Paciente", "PacienteNavigation")
                        .WithMany("Marcacao")
                        .HasForeignKey("IdPaciente")
                        .HasConstraintName("FK_Marcacao_Paciente")
                        .IsRequired();

                    b.HasOne("SampleWebApiAspNetCore.Models.Funcionario", "TecnicoNavigation")
                        .WithMany()
                        .HasForeignKey("TecnicoNavigationIdFuncionario");

                    b.Navigation("FuncionarioNavigation");

                    b.Navigation("PacienteNavigation");

                    b.Navigation("TecnicoNavigation");
                });

            modelBuilder.Entity("SampleWebApiAspNetCore.Models.Paciente", b =>
                {
                    b.HasOne("SampleWebApiAspNetCore.Models.Utilizador", "UtilizadorNavigation")
                        .WithOne("Paciente")
                        .HasForeignKey("SampleWebApiAspNetCore.Models.Paciente", "IdUtilizador")
                        .HasConstraintName("FK_Paciente_Utilizador");

                    b.Navigation("UtilizadorNavigation");
                });

            modelBuilder.Entity("SampleWebApiAspNetCore.Models.Funcao", b =>
                {
                    b.Navigation("Funcionarios");
                });

            modelBuilder.Entity("SampleWebApiAspNetCore.Models.Funcionario", b =>
                {
                    b.Navigation("Marcacao");
                });

            modelBuilder.Entity("SampleWebApiAspNetCore.Models.Paciente", b =>
                {
                    b.Navigation("Marcacao");
                });

            modelBuilder.Entity("SampleWebApiAspNetCore.Models.Utilizador", b =>
                {
                    b.Navigation("Funcionario");

                    b.Navigation("Paciente");
                });
#pragma warning restore 612, 618
        }
    }
}
